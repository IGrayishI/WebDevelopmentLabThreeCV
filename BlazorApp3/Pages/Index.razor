@page "/"
@inject APICRUD apiCRUD;

<body>
    <PageTitle>Index</PageTitle>
    <h1>Hello, world!</h1>

    Welcome to your new app.

    <AuthorizeView>
        <NotAuthorized>
            <div>
                <p>You are not signed in.</p>
                @if (_listOfSkills is null)
                {
                    <p>Skill List Empty</p>
                }
                else
                {
                    @foreach (var item in _listOfSkills)
                    {
                        <div class="card p-2">
                            <h4>@item.Title</h4>
                            <p>@item.Description</p>
                            <p>@item.SkillLevel /10</p>
                            <p>@item.YearsOfExperience Years of Experience</p>
                        </div>
                    }
                }
            </div>
        </NotAuthorized>
        <Authorized>
        </Authorized>
    </AuthorizeView>

    <EditForm Model="@NewSkill" OnSubmit="@SubmitSkill" id="addskill">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="form-group">
            <label for="title">Title</label>
            <InputText id="title" class="form-control" @bind-Value="NewSkill.Title"></InputText>
            <ValidationMessage For="@(() => NewSkill.Title)" />
        </div>

        <div class="form-group">
            <label for="description">Description</label>
            <InputText id="description" class="form-control" @bind-Value="NewSkill.Description"></InputText>
            <ValidationMessage For="@(() => NewSkill.Description)" />
        </div>

        <div class="form-group">
            <label for="level">Level</label>
            <InputNumber id="level" class="form-control" @bind-Value="NewSkill.SkillLevel"></InputNumber>
            <ValidationMessage For="@(() => NewSkill.SkillLevel)" />
        </div>

        <div class="form-group">
            <label for="years-of-experience">Years of Experience</label>
            <InputNumber id="years-of-experience" class="form-control" @bind-Value="NewSkill.YearsOfExperience"></InputNumber>
            <ValidationMessage For="@(() => NewSkill.YearsOfExperience)" />
        </div><br />

        <input class="btn btn-primary my-2" form="addskill" type="submit" />

    </EditForm>


</body>

@code {
    //--- Properties ---
    private Skills NewSkill { get; set; } = new Skills();
    private List<Skills>? _listOfSkills;

    //---Methods---

    protected override async Task OnInitializedAsync()
    {

        try
        {
            NewSkill = new();
            _listOfSkills = await apiCRUD.ListSkills("https://localhost:7033");
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.Message);
        }
    }

    //Doesnt Work for some reason.
    private async Task SubmitSkill()
    {
        try
        {
            await apiCRUD.AddSkill("https://localhost:7033", NewSkill);
            // NewSkill = new() { Id = Guid.NewGuid() };
            Console.WriteLine("SubmitSkill Complete");
        }
        catch (Exception ex)
        {
            //Some sort of error logger?
            Console.WriteLine($"Error. {ex.Message}");
        }
    }
}